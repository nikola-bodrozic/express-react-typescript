swagger: '2.0'
info:
  version: 1.0.0
  title: Book API
host: localhost:8080
basePath: /api/v1
schemes:
  - http
tags:
- name: "Books"
  description: "Everything about books"
paths:
  /books:
    get:
      tags:
        - Books
      description: Returns books
      operationId: findBooks
      summary: Gets paginated books
      parameters:
        - name: page
          in: query
          description: what page to select 1st or 2nd ...
          required: true
          type: integer
        - name: perpage
          in: query
          description: how many rows per page
          required: true
          type: integer
        - name: column
          in: query
          description: which column should be used for sorting
          required: true
          type: string
        - name: sort
          in: query
          required: true
          description: sort asc or desc
          type: string
      responses:
        '200':
          description: books response
          schema:
            type: array
            items:
              $ref: '#/definitions/Book'
    post:
      tags:
        - "Books"
      summary: Creates a new book
      operationId: addBook
      produces:
        - application/json
      parameters:
        - name: book
          in: body
          description: Add book
          required: true
          schema:
            $ref: '#/definitions/BaseBook'
      responses:
        '201':
          description: book created
          schema:
            $ref: '#/definitions/Book'
  /books/{id}:
    get:
      tags:
        - "Books"    
      summary: get book by ID
      operationId: findBookById
      parameters:
        - name: id
          in: path
          description: ID of book to fetch
          required: true
          type: integer
      responses:
        '200':
          description: book response
          schema:
            $ref: '#/definitions/Book'
    put:
      tags:
        - "Books"
      summary: updates a book
      operationId: updateBook
      parameters:
      - name: "id"
        in: "path"
        description: "id of book that need to be updated"
        required: true
        type: integer
      - in: "body"
        name: "body"
        description: "Updated book object"
        required: true
        schema:
          $ref: "#/definitions/BaseBook"
      responses:
        200:
          description: "Book is updated"
        404:
          description: "Book not found"
    delete:
      tags:
        - "Books"
      summary: deletes a single book based 
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          description: ID of book to delete
          required: true
          type: integer
      responses:
        '200':
          description: deleted book
        '404':
          description: Book not found
          
definitions:
  BaseBook:
    type: object
    required:
      - name
      - type
      - start_time
    properties:
      name:
        type: string
      type:
        type: string
      start_time:
        type: string
        format: date-time
  Book:
    type: object
    allOf: 
      - $ref: '#/definitions/BaseBook'
      - required: 
          - id
        properties:
          id:
            type: integer
